name: Nightly Build

on:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch:

env:
  CHANNEL: -nightly

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macOS-latest, windows-latest, windows-11-arm]
        rust: [stable]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
    - name: Setup MUSL
      if: matrix.os == 'ubuntu-latest'
      run: |
        rustup target add x86_64-unknown-linux-musl
        sudo apt-get -qq install musl-tools
    - name: Setup MUSL for aarch64
      if: matrix.os == 'ubuntu-24.04-arm'
      run: |
        rustup target add aarch64-unknown-linux-musl
        sudo apt-get -qq install musl-tools
    - name: Setup aarch64 mac
      if: matrix.os == 'macOS-latest'
      run: |
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-apple-darwin
    - name: Build for linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        make release_lnx
    - name: Build for linux aarch64
      if: matrix.os == 'ubuntu-24.04-arm'
      run: |
        make release_lnx_aarch64
    - name: Build for macOS
      if: matrix.os == 'macOS-latest'
      run: make release_mac
    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: make release_win
    - name: Build for Windows aarch64
      if: matrix.os == 'windows-11-arm'
      run: make release_win_aarch64
    - name: Move archives
      run: |
        mkdir -p upload
        mv *.zip upload
    - name: Upload
      uses: ryand56/r2-upload-action@latest
      with:
        r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
        r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
        r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        r2-bucket: ${{ secrets.R2_BUCKET }}
        source-dir: upload
        destination-dir: ./toolchain/nightly/
