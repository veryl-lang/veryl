name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macOS-latest, windows-latest, windows-11-arm]
        rust: [stable]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
    - name: Setup MUSL
      if: matrix.os == 'ubuntu-latest'
      run: |
        rustup target add x86_64-unknown-linux-musl
        sudo apt-get -qq install musl-tools
    - name: Setup MUSL for aarch64
      if: matrix.os == 'ubuntu-24.04-arm'
      run: |
        rustup target add aarch64-unknown-linux-musl
        sudo apt-get -qq install musl-tools
    - name: Setup aarch64 mac
      if: matrix.os == 'macOS-latest'
      run: |
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-apple-darwin
    - name: Build for linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        make release_lnx
    - name: Build for linux aarch64
      if: matrix.os == 'ubuntu-24.04-arm'
      run: |
        make release_lnx_aarch64
    - name: Build for macOS
      if: matrix.os == 'macOS-latest'
      run: make release_mac
    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: make release_win
    - name: Build for Windows aarch64
      if: matrix.os == 'windows-11-arm'
      run: make release_win_aarch64
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        files: "*.zip\n*.rpm"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vsce:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: support/vscode
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - run: npm install
    - run: make publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.VERYL_DOCKER_PAT }}
        repository: veryl-lang/docker
        event-type: release
        client-payload: '{"ref": "${{ github.ref_name }}"}'

  highlightjs:
    permissions:
      id-token: write  # Required for OIDC
      contents: read
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: support/highlightjs
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      # Ensure npm 11.5.1 or later is installed
      - name: Update npm
        run: npm install -g npm@latest
      - run: npm publish
