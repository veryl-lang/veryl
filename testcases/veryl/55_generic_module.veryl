proto package ProtoPackage55 {
    type data_a;
    type data_b;
}

package Package55::<A: u32, B: u32> for ProtoPackage55 {
    type data_a = logic<A>;
    type data_b = logic<B>;
}

package Package55K {
    enum FooBar {
        FOO,
        BAR,
    }
}

module Module55 {
    alias package Package55J = Package55::<8, 16>;
    alias module Module55J = Module55I::<Package55J>;

    inst u_a0: Module55A::<Module55B>;
    inst u_a1: Module55A::<Module55C>;
    inst u_e0: Module55E::<Module55C>;
    inst u_e1: Module55E::<Module55D>;
    inst u_f0: Module55F::<Module55C>;
    inst u_f1: Module55F::<>;
    inst u_h0: Module55H::<10>;
    inst u_h1: Module55H::<10>;
    inst u_i0: Module55I::<Package55::<32'd8, 32'd16>>;
    inst u_j0: Module55J;
    inst u_k0: Module55K::<Package55K::FooBar::FOO>;
    inst u_k1: Module55K::<Package55K::FooBar::BAR>;
}

pub proto module Proto55;

/// Generic module test for doc comment
pub module Module55A::<T: Proto55> {
    inst u: T;
}

module Module55B for Proto55 {}

module Module55C for Proto55 {}

module Module55D for Proto55 {}

module Module55E::<T: Proto55> {
    inst u: Module55A::<T>;
}

module Module55F::<T: Proto55 = Module55B> {
    inst u: T;
}

module Module55G::<T: Proto55> {
    inst u: T;
}

module Module55H::<W: u32> {
    struct StructH::<W: u32> {
        value: logic<W>,
    }

    let _a: StructH::<W> = 0;
}

module Module55I::<PKG: ProtoPackage55> {
    let _a: PKG::data_a = 0;
    let _b: PKG::data_b = 0;
}

module Module55K::<V: Package55K::FooBar> {
    let _foobar: Package55K::FooBar = V;
}
